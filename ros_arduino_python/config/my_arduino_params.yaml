# 定义相关参数，端口，rate，PID，sensors等默认参数。由arduino.launch调用
# arduino + 25ga370马达参数配置(12v 空转620rpm/分钟)

port: /dev/ttyACM0
baud: 57600
timeout: 0.1

rate: 50
sensorstate_rate: 10

use_base_controller: True #启用基座控制器
base_controller_rate: 10

# For a robot that uses base_footprint, change base_frame to base_footprint
base_frame: base_footprint #base_frame 设置

# === 马达参数 Robot drivetrain parameters
wheel_diameter: 0.067 #0.067   # 轮胎直径(米) 
wheel_track: 0.20 #0.11        # 两个轮胎间距(米)
encoder_resolution: 38.5       # 编码器精度(手动推车移动1米，用1米的电机编码器值*(self.wheel_diameter * pi)/self.gear_reduction可以计算出此编码器精度)
gear_reduction: 20             # 电机减速比(马达参数表：jgb37-520 12v 空转330rpm 减速比20)
#motors_reversed: True         # 转向取反
turn_reduction: 0.49           # 转向减速比（使转向速度降低，确保angular.z=1持续5s时旋转<40度，需要反复测量）

# === PID parameters 马达PID参数，控制轮速，修改到车子能够根据命令走直线且速度稳定
Kp: 15 #3 #0.25   # 负责提高响应速度。调大后惯性过大，容易导致超过目标值后的震荡回调（通常先把其他参数置0，将Kp参数由小向大调，以能达到最快响应又无无大超调为最佳参数。）
Kd: 12 #0 #0      # 负责减速。对Kp的未来走势进行预测后减速，以避免Kp冲过头（通常为0.5*延迟时间，过大会导致超调震荡而难以收敛）
Ki: 0 #2 #0.2     # 负责细精度小误差的消除。当检测到与目标距离存在误差且一直未消除时，会不断积分累积变大，直到克服自重和摩擦力后轻微移动，完成误差消除（调大会导致趋于稳定的时间变长，调小会导致超调量过大而回调震荡幅度过大。通常从大往小调整，调小的同时也要缩小Kp）
Ko: 50
accel_limit: 1.0

# === Sensor definitions.  Examples only - edit for your robot.
#     Sensor type can be one of the follow (case sensitive!):
#	  * Ping
#	  * GP2D12
#	  * Analog
#	  * Digital
#	  * PololuMotorCurrent
#	  * PhidgetsVoltage
#	  * PhidgetsCurrent (20 Amp, DC)
sensors: {
  #motor_current_left:   {pin: 0, type: PololuMotorCurrent, rate: 5},
  #motor_current_right:  {pin: 1, type: PololuMotorCurrent, rate: 5},
  #ir_front_center:      {pin: 2, type: GP2D12, rate: 10},
  #sonar_front_center:   {pin: 5, type: Ping, rate: 10},
  #arduino_led:          {pin: 13, type: Digital, rate: 5, direction: output}
}
